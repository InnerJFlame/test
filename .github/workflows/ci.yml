name: CI

on:
    push:
    pull_request:

#env:
#    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#    COVERAGE: '0'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Validate composer.json and composer.lock
                run: composer validate
            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-
            -   name: Install dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install --prefer-dist --no-progress --no-suggest

    php-cs-fixer:
        runs-on: ubuntu-latest
        timeout-minutes: 20
        strategy:
            matrix:
                php:
                    - '7.4'
            fail-fast: false
        env:
            PHP_CS_FIXER_FUTURE_MODE: '1'
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: intl, bcmath, curl, openssl, mbstring
                  ini-values: memory_limit=-1
                  tools: flex, pecl, composer, flex, php-cs-fixer
                  coverage: none
            - name: Run PHP-CS-Fixer fix
              run: php-cs-fixer fix --dry-run --diff --ansi

    phpunit:
        name: PHPUnit (PHP ${{ matrix.php }})
        runs-on: ubuntu-latest
        timeout-minutes: 20
        strategy:
            matrix:
                php:
                    - '7.1'
                    - '7.2'
                    - '7.3'
                    - '7.4'
                    - 'rc'
                include:
                    - php: '7.4'
                      coverage: true
            fail-fast: false
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  tools: flex, pecl, composer, flex
                  extensions: intl, bcmath, curl, openssl, mbstring
                  coverage: pcov
                  ini-values: memory_limit=-1
            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Enable code coverage
              if: matrix.coverage
              run: echo '::set-env name=COVERAGE::1'
            - name: Remove Doctrine MongoDB ODM
              if: (startsWith(matrix.php, '7.1') || startsWith(matrix.php, 'rc'))
              run: |
                  composer remove --dev --no-interaction --no-progress --no-update --ansi \
                    doctrine/mongodb-odm \
                    doctrine/mongodb-odm-bundle \
            - name: Set Composer platform config
              if: (startsWith(matrix.php, 'rc'))
              run: |
                  composer config platform.php 7.4.99
            - name: Update project dependencies
              run: composer update --no-interaction --no-progress --ansi
            - name: Require Symfony Uid
              if: (!startsWith(matrix.php, '7.1'))
              run: composer require symfony/uid --dev --no-interaction --no-progress --ansi
            - name: Install PHPUnit
              run: vendor/bin/simple-phpunit --version
            - name: Clear test app cache
              if: (!startsWith(matrix.php, 'rc'))
              run: tests/Fixtures/app/console cache:clear --ansi
            - name: Clear test app cache (php rc)
              if: (startsWith(matrix.php, 'rc'))
              run: rm -Rf tests/Fixtures/app/var/cache/*
            - name: Run PHPUnit tests
              run: |
                  mkdir -p build/logs/phpunit
                  if [ "$COVERAGE" = '1' ]; then
                    vendor/bin/simple-phpunit --coverage-clover build/logs/phpunit/clover.xml --log-junit build/logs/phpunit/junit.xml
                  else
                    vendor/bin/simple-phpunit --log-junit build/logs/phpunit/junit.xml
                  fi
            - name: Upload test artifacts
              if: always()
              uses: actions/upload-artifact@v1
              with:
                  name: phpunit-logs-php${{ matrix.php }}
                  path: build/logs/phpunit
              continue-on-error: true
            - name: Upload coverage results to Codecov
              if: matrix.coverage
              uses: codecov/codecov-action@v1
              with:
                  name: phpunit-php${{ matrix.php }}
                  flags: phpunit
                  fail_ci_if_error: true
              continue-on-error: true
            - name: Upload coverage results to Coveralls
              if: matrix.coverage
              env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  composer global require --prefer-dist --no-interaction --no-progress --ansi cedx/coveralls
                  export PATH="$PATH:$HOME/.composer/vendor/bin"
                  coveralls build/logs/phpunit/clover.xml
              continue-on-error: true

    phpstan:
        name: PHPStan
        runs-on: ubuntu-latest
        timeout-minutes: 20
        strategy:
            matrix:
                php:
                    - '7.4'
            fail-fast: false
        env:
            APP_DEBUG: '1' # https://github.com/phpstan/phpstan-symfony/issues/37
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  tools: flex, pecl, composer, flex, phpstan
                  extensions: intl, bcmath, curl, openssl, mbstring
                  coverage: none
                  ini-values: memory_limit=-1
            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Update project dependencies
              run: composer update --no-interaction --no-progress --ansi
            - name: Require Symfony Uid
              run: composer require symfony/uid --dev --no-interaction --no-progress --ansi
            - name: Install PHPUnit
              env:
                  SYMFONY_PHPUNIT_VERSION: '9.4'
              run: vendor/bin/simple-phpunit --version
            - name: Cache PHPStan results
              uses: actions/cache@v2
              with:
                  path: /tmp/phpstan
                  key: phpstan-php${{ matrix.php }}-${{ github.sha }}
                  restore-keys: |
                      phpstan-php${{ matrix.php }}-
                      phpstan-
              continue-on-error: true
            - name: Clear test app cache
              run: |
                  tests/Fixtures/app/console cache:clear --ansi
            - name: Run PHPStan analysis
              env:
                  SYMFONY_PHPUNIT_VERSION: '9.4'
              run: phpstan analyse --no-interaction --no-progress --no-interaction --ansi
