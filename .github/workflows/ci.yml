name: CI

on:
    push:
    pull_request:

#env:
#    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#    COVERAGE: '0'

jobs:
    php-cs-fixer:
        runs-on: ubuntu-latest
        timeout-minutes: 20
        strategy:
            matrix:
                php:
                    - '7.4'
            fail-fast: false
        env:
            PHP_CS_FIXER_FUTURE_MODE: '1'
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: intl, bcmath, curl, openssl, mbstring
                  ini-values: memory_limit=-1
                  tools: flex, pecl, composer, flex, php-cs-fixer
                  coverage: none
            - name: Run PHP-CS-Fixer fix
              run: php-cs-fixer fix --dry-run --diff --ansi

    phpstan:
        name: PHPStan
        runs-on: ubuntu-latest
        timeout-minutes: 20
        strategy:
            matrix:
                php:
                    - '7.4'
            fail-fast: false
        env:
            APP_DEBUG: '1' # https://github.com/phpstan/phpstan-symfony/issues/37
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  tools: flex, pecl, composer, flex, phpstan
                  extensions: intl, bcmath, curl, openssl, mbstring
                  coverage: none
                  ini-values: memory_limit=-1
            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Update project dependencies
              run: composer update --no-interaction --no-progress --ansi
            - name: Require Symfony Uid
              run: composer require symfony/uid --dev --no-interaction --no-progress --ansi
            - name: Install PHPUnit
              env:
                  SYMFONY_PHPUNIT_VERSION: '9.4'
              run: vendor/bin/simple-phpunit --version
            - name: Cache PHPStan results
              uses: actions/cache@v2
              with:
                  path: /tmp/phpstan
                  key: phpstan-php${{ matrix.php }}-${{ github.sha }}
                  restore-keys: |
                      phpstan-php${{ matrix.php }}-
                      phpstan-
              continue-on-error: true
            - name: Clear test app cache
              run: |
                  tests/Fixtures/app/console cache:clear --ansi
            - name: Run PHPStan analysis
              env:
                  SYMFONY_PHPUNIT_VERSION: '9.4'
              run: phpstan analyse --no-interaction --no-progress --no-interaction --ansi
